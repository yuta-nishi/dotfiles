{
  /* Spell Settings */
  "cSpell.userWords": [
    "aaeon",
    "Ackermann",
    "acodec",
    "actix",
    "adpyke",
    "aeroplane",
    "allclose",
    "androidjni",
    "annot",
    "apdcephfs",
    "apiclient",
    "apikey",
    "arange",
    "argmax",
    "argmin",
    "argsort",
    "argwhere",
    "asctime",
    "asmr",
    "assetbundle",
    "astype",
    "asvetliakov",
    "Atcoder",
    "atlamal",
    "Attributify",
    "audiofile",
    "audioset",
    "Augmentor",
    "autocmds",
    "autoencoder",
    "autograd",
    "autoindent",
    "automerge",
    "avgs",
    "azuretools",
    "batchnorm",
    "bblencoding",
    "bboxes",
    "beartype",
    "Behaviour",
    "bestaudio",
    "BGRA",
    "biber",
    "bibtex",
    "Binarizer",
    "bioinformatics",
    "biomejs",
    "blit",
    "blogposts",
    "blogrenderer",
    "bndbox",
    "boxplot",
    "Budoux",
    "calt",
    "cens",
    "centernet",
    "chardata",
    "charliermarsh",
    "chmax",
    "chmin",
    "chromagram",
    "chunksize",
    "cifar",
    "ckpt",
    "ckpt_path",
    "clangd",
    "clippy",
    "clockface",
    "cloudlatex",
    "clsx",
    "cmake",
    "cmap",
    "Codebook",
    "codecov",
    "codegen",
    "coef",
    "COEFFS",
    "Colab",
    "collab",
    "colorbar",
    "comms",
    "counterfactuals",
    "coversong",
    "cplus",
    "cppbuild",
    "cpptools",
    "cpython",
    "CQTTPP",
    "crafzdog",
    "crossentropy",
    "CSUI",
    "cuda",
    "cudnn",
    "cumsum",
    "cupertino",
    "curr",
    "cvalidation",
    "cvimage",
    "darknet",
    "dask",
    "dataend",
    "datagen",
    "dataparallel",
    "datapath",
    "datastart",
    "datetime",
    "dbeta",
    "dbname",
    "DCGAN",
    "ddconfig",
    "DDPM",
    "dealloc",
    "def",
    "dejavu",
    "deno",
    "denoised",
    "Denoiser",
    "denoising",
    "denormalize",
    "depthwise",
    "Deque",
    "DESCR",
    "Dicee",
    "diningtable",
    "dinov",
    "dlig",
    "dnntts",
    "dockercompose",
    "doctex",
    "donchaoyang",
    "donot",
    "dotenv",
    "dotfiles",
    "dout",
    "Doxygen",
    "dsets",
    "dsize",
    "dtype",
    "duser",
    "easymotion",
    "edgecolor",
    "EEXIST",
    "efficientnet",
    "einops",
    "Embedder",
    "emissionprob",
    "endoftext",
    "ENOENT",
    "epoll",
    "EPOLLIN",
    "EPOLLONESHOT",
    "errno",
    "errorbar",
    "esbenp",
    "eventfd",
    "Everforest",
    "execa",
    "execpath",
    "EXITCODE",
    "extention",
    "faicons",
    "Faiss",
    "Fano",
    "fansi",
    "fastapi",
    "fcolor",
    "fftpack",
    "fibo",
    "figsize",
    "fillstyle",
    "fillvalue",
    "filterbank",
    "Fingerprinter",
    "followee",
    "fontsize",
    "formkit",
    "fourcc",
    "fourm",
    "foxundermoon",
    "Frechet",
    "fromarray",
    "frombuffer",
    "Frontmatter",
    "fscore",
    "fstat",
    "fullscreen",
    "funcs",
    "gakkari",
    "gapminder",
    "gdown",
    "gdrive",
    "GELU",
    "gensim",
    "getall",
    "getpid",
    "getrlimit",
    "gohtml",
    "goldenretriever",
    "gomarkdown",
    "googleapiclient",
    "googlenet",
    "Gosei",
    "graphqlrc",
    "graphviz",
    "hadolint",
    "hangfrom",
    "hann",
    "hanning",
    "hardtanh",
    "hashset",
    "headlessui",
    "heroicons",
    "hexeditor",
    "Hira",
    "hlsearch",
    "hmmlearn",
    "Holdem",
    "hono",
    "honox",
    "hsplit",
    "httplib",
    "httponly",
    "httpx",
    "huggingface",
    "hyperparameters",
    "iconify",
    "idxs",
    "ifft",
    "ignorecase",
    "iinfo",
    "iloc",
    "ILSVRC",
    "imagebind",
    "imageconversion",
    "imagefile",
    "imagenet",
    "IMAP",
    "imdecode",
    "imencode",
    "imgs",
    "imgui",
    "imread",
    "imsave",
    "imshow",
    "imwrite",
    "inconv",
    "incsearch",
    "indentRainbow",
    "indicatorStyle",
    "indir",
    "inferrinizzard",
    "infile",
    "infs",
    "inorder",
    "inoremap",
    "interp",
    "intervaltree",
    "ious",
    "ipcapt",
    "ipykernel",
    "ipynb",
    "ipython",
    "isbot",
    "isodate",
    "isort",
    "isscalar",
    "itemadapter",
    "iternext",
    "itertools",
    "izip",
    "Jaccard",
    "jaxtyped",
    "jaxtyping",
    "jetson",
    "jiwer",
    "jsonserialize",
    "kaggle",
    "kaleido",
    "katex",
    "Kbps",
    "kdim",
    "keepdim",
    "keepdims",
    "Keras",
    "keymap",
    "keymaps",
    "keyname",
    "Klog",
    "kmeans",
    "kubernetes",
    "labml",
    "lambd",
    "Langevin",
    "latexify",
    "latexindent",
    "latexmk",
    "latexmkrc",
    "leakyrelu",
    "leetcode",
    "leftbbox",
    "lefthook",
    "lefttop",
    "lenet",
    "levelname",
    "lexsort",
    "Lextures",
    "libcontext",
    "libfmp",
    "libm",
    "Libri",
    "LIBRISPEECH",
    "librosa",
    "liga",
    "linalg",
    "linestyle",
    "linewidth",
    "linspace",
    "liveserver",
    "lmplot",
    "loadtxt",
    "lockfiles",
    "log4cplus_config",
    "logdir",
    "loginfo",
    "Logit",
    "Logits",
    "logn",
    "logprob",
    "logsumexp",
    "loguru",
    "lolims",
    "lossconfig",
    "lspconfig",
    "lstm",
    "ltrb",
    "lualatex",
    "lualatexmk",
    "lualine",
    "lucide",
    "makedataset",
    "manim",
    "mapleader",
    "markersize",
    "mashable",
    "matplotlib",
    "maxid",
    "maxid1",
    "maxpool",
    "Mecab",
    "mediapipe",
    "MEDV",
    "meian",
    "Meiryo",
    "MELS",
    "melspec",
    "Menlo",
    "meshgrid",
    "Meslo",
    "mfcc",
    "micromamba",
    "middlewares",
    "minibatch",
    "miniforge",
    "minikube",
    "minimist",
    "mjpg",
    "mlab",
    "mlog",
    "mman",
    "mmcv",
    "mmseg",
    "MNIST",
    "models",
    "Monaspace",
    "monospace",
    "mpconv",
    "mprotect",
    "mult",
    "Multihead",
    "multimodal",
    "murata",
    "musicnet",
    "mypy",
    "n_timesteps",
    "NAND",
    "nbins",
    "nbinsx",
    "NCHW",
    "ndarray",
    "ndim",
    "ndimage",
    "nditer",
    "needleman",
    "neoconf",
    "neodev",
    "neovim",
    "neptunus",
    "Nesterov",
    "netns",
    "newaxis",
    "nextjs",
    "NEXTVAL",
    "NFFT",
    "nipy",
    "nishi",
    "nishida",
    "nixos",
    "nixpkgs",
    "nlog",
    "nlogk",
    "nlogl",
    "nlogm",
    "nlogn",
    "nmlog",
    "nnoremap",
    "nohl",
    "nonblocking",
    "nonstopmode",
    "nopython",
    "noremap",
    "noverlap",
    "numba",
    "numpy",
    "nums",
    "nunit",
    "nvim",
    "Nyquist",
    "Objectfile",
    "Okataduke",
    "omegaconf",
    "omegaconfg",
    "omnisharp",
    "onehot",
    "oneshot",
    "openai",
    "openapi",
    "opencv",
    "openlab",
    "optim",
    "outc",
    "outconv",
    "outdir",
    "outfile",
    "outpath",
    "output_safechars",
    "outtmpl",
    "pairplot",
    "particlesystem",
    "Party",
    "pbar",
    "pckl",
    "pdflatex",
    "pdfs",
    "peakdetect",
    "permutohedron",
    "petgraph",
    "Plasmo",
    "plasmohq",
    "plotly",
    "Pluggable",
    "popleft",
    "postbuild",
    "postorder",
    "postprocessors",
    "pottedplant",
    "prec",
    "preds",
    "preferredcodec",
    "preferredquality",
    "preorder",
    "Preprocesses",
    "pretrained",
    "println",
    "probs",
    "proconio",
    "pstatement",
    "pyaudio",
    "pyautogui",
    "pycache",
    "pydantic",
    "pydub",
    "pylab",
    "Pylance",
    "pymongo",
    "pyomo",
    "pyopenjtalk",
    "pyplot",
    "pyproject",
    "pysqlite",
    "pytest",
    "qdrant",
    "quantile",
    "quickfix",
    "randn",
    "randperm",
    "rankdir",
    "Raycast",
    "rclcpp",
    "rconly",
    "RDONLY",
    "readwav",
    "realsense",
    "rehype",
    "relu",
    "remappings",
    "repr",
    "reqwest",
    "resnet",
    "REUSEADDR",
    "rgba",
    "rightbbox",
    "rightbottom",
    "Rigidbody",
    "rint",
    "ripgrep",
    "rmat",
    "ROBOTSTXT",
    "Rodrigues",
    "rosnode",
    "rospy",
    "RSYM",
    "rterm",
    "rticks",
    "rustc",
    "rustfmt",
    "safechars",
    "safetensors",
    "savefig",
    "savez",
    "scatterplot",
    "scikit",
    "scipy",
    "screencapture",
    "seaborn",
    "selectbox",
    "semilogy",
    "semseg",
    "sess",
    "sessionmaker",
    "set_ylabel",
    "setrlimit",
    "shadcn",
    "Shazam",
    "shibui",
    "Siri",
    "skillup",
    "skimage",
    "sklearn",
    "softmax",
    "softplus",
    "songname",
    "soundfile",
    "specgram",
    "specshow",
    "specvqgan",
    "sqlalchemy",
    "sslmode",
    "startprob",
    "stdc",
    "STFT",
    "streamlit",
    "stylelint",
    "substracting",
    "sumneko",
    "SUPABASE",
    "suptitle",
    "Suudoku",
    "svgr",
    "synctex",
    "sysad",
    "tacotron",
    "tailwindcss",
    "Takahashi",
    "tamasfe",
    "tcpdump",
    "tcpip",
    "techtrain",
    "tempdir",
    "tempfile",
    "templ",
    "tempogram",
    "tensorboard",
    "tensorized",
    "termcolor",
    "terrainphysics",
    "testid",
    "texbin",
    "textbox",
    "textlint",
    "textlintrc",
    "textmeshpro",
    "tgbus",
    "tilemap",
    "timecodes",
    "timesteps",
    "tindog",
    "tkdnn",
    "tnet",
    "toarray",
    "tobytes",
    "tocbot",
    "tofile",
    "topk",
    "torchaudio",
    "torchgen",
    "torchmetrics",
    "torchsummary",
    "torchvision",
    "TPIETY",
    "tqdm",
    "traceback",
    "traceroute",
    "transmat",
    "trimap",
    "tsne",
    "ttslearn",
    "tvmonitor",
    "txt",
    "typecheck",
    "typechecker",
    "typegen",
    "udemy",
    "ugui",
    "uielements",
    "uielementsnative",
    "ulnv",
    "ultralytics",
    "umap",
    "umapper",
    "Undistort",
    "unet",
    "unfollow",
    "ungraph",
    "unilab",
    "unionfind",
    "unistd",
    "unityanalytics",
    "unitywebrequest",
    "unitywebrequestassetbundle",
    "unitywebrequestaudio",
    "unitywebrequesttexture",
    "unitywebrequestwww",
    "unnamedplus",
    "unocss",
    "unplugin",
    "unsplit",
    "unsqueeze",
    "unstub",
    "upconv",
    "Upgrader",
    "uplims",
    "upsample",
    "upsampling",
    "urql",
    "uvicorn",
    "val",
    "vaul",
    "vdim",
    "venv",
    "videocapture",
    "Vimmer",
    "vimrc",
    "vimtutor",
    "viridis",
    "virtualenv",
    "visualstar",
    "vite",
    "viterbi",
    "vitest",
    "vnoremap",
    "void",
    "volupta",
    "vqgan",
    "VQLPAPS",
    "vqperceptual",
    "VQVAE",
    "vulcanus",
    "wakatime",
    "walkdir",
    "wandb",
    "Waseda",
    "watanabe",
    "wavefile",
    "waveglow",
    "waveplot",
    "waveshow",
    "wavfile",
    "wavfiles",
    "wavio",
    "webm",
    "Wextra",
    "wezterm",
    "workdir",
    "wunsch",
    "xaxis",
    "xelatex",
    "xelatexmk",
    "xent",
    "xlabel",
    "xlim",
    "xmax",
    "xmin",
    "xticks",
    "xtitle",
    "xyxy",
    "yamamoto",
    "yaxis",
    "yerr",
    "ylabel",
    "ylim",
    "ymax",
    "ymin",
    "Yokan",
    "Yolo",
    "yolov",
    "yscale",
    "yticks",
    "ytitle",
    "yubrot",
    "yuta",
    "yutanishi",
    "yzhang",
    "zaxis",
    "zenn",
    "zenodo",
    "zlim",
    "zmax",
    "zmin",
    "Σwij"
  ],
  /* Common Settings */
  "diffEditor.ignoreTrimWhitespace": false,
  "editor.accessibilitySupport": "off",
  "editor.codeActionsOnSave": {
    "source.organizeImports": "explicit",
  },
  "editor.cursorSmoothCaretAnimation": "on",
  "editor.fontFamily": "Monaspace Neon",
  "editor.fontLigatures": true,
  "editor.fontSize": 14,
  "editor.formatOnSave": true,
  "editor.inlayHints.enabled": "onUnlessPressed",
  "editor.inlineSuggest.enabled": true,
  "editor.minimap.enabled": false,
  "editor.showFoldingControls": "always",
  "editor.smoothScrolling": true,
  "editor.suggest.insertMode": "replace",
  "editor.wrappingIndent": "indent",
  "explorer.compactFolders": false,
  "explorer.confirmDragAndDrop": false,
  "files.insertFinalNewline": true,
  "files.trimFinalNewlines": true,
  "files.trimTrailingWhitespace": true,
  "terminal.integrated.enableMultiLinePasteWarning": "never",
  "terminal.integrated.fontFamily": "Hack Nerd Font",
  "terminal.integrated.inheritEnv": false,
  "terminal.integrated.macOptionIsMeta": true,
  "workbench.colorTheme": "Catppuccin Mocha",
  "workbench.iconTheme": "material-icon-theme",
  "workbench.startupEditor": "none",
  /* NeoVim Settings */
  "vscode-neovim.neovimExecutablePaths.darwin": "/opt/homebrew/bin/nvim",
  "vscode-neovim.neovimInitVimPaths.darwin": "/Users/yutanishi/.config/nvim/init.lua",
  "vscode-neovim.compositeKeys": {
    "jk": {
      "command": "vscode-neovim.escape",
    }
  },
  "extensions.experimental.affinity": {
    "asvetliakov.vscode-neovim": 1
  },
  /* Debug Settings */
  "launch": {
    "version": "0.2.0",
    "configurations": [
      {
        "name": "Rust Debug",
        "type": "lldb",
        "request": "launch",
        "cargo": {
          "args": [
            "build",
          ],
        },
        "cwd": "${workspaceFolder}",
        "env": {
          "RUST_BACKTRACE": "1"
        },
        "internalConsoleOptions": "openOnSessionStart",
        "sourceLanguages": [
          "rust"
        ],
      },
      {
        "name": "Rust Test Debug",
        "type": "lldb",
        "request": "launch",
        "cargo": {
          "args": [
            "test",
            "--no-run",
            "--lib"
          ],
        },
        "cwd": "${workspaceFolder}",
        "env": {
          "RUST_BACKTRACE": "1"
        },
        "internalConsoleOptions": "openOnSessionStart",
        "sourceLanguages": [
          "rust"
        ]
      },
      {
        "name": "C Debug",
        "type": "lldb",
        "request": "launch",
        "program": "${fileDirname}/${fileBasenameNoExtension}",
        "cwd": "${workspaceFolder}",
        "internalConsoleOptions": "openOnSessionStart",
        "sourceLanguages": [
          "c"
        ],
        "preLaunchTask": "C Build"
      },
      {
        "name": "C++ Debug",
        "type": "lldb",
        "request": "launch",
        "program": "${fileDirname}/${fileBasenameNoExtension}",
        "cwd": "${workspaceFolder}",
        "internalConsoleOptions": "openOnSessionStart",
        "sourceLanguages": [
          "c++"
        ],
        "preLaunchTask": "C++ Build"
      }
    ]
  },
  /* HTML Settings */
  "[html]": {
    "editor.defaultFormatter": "vscode.html-language-features",
    "editor.tabSize": 2,
  },
  "html.format.indentInnerHtml": true,
  "html.format.extraLiners": "",
  "html.format.preserveNewLines": false,
  "emmet.variables": {
    "lang": "ja"
  },
  /* CSS Settings */
  "[css]": {
    "editor.defaultFormatter": "biomejs.biome",
    "editor.tabSize": 2
  },
  "[postcss]": {
    "editor.defaultFormatter": "biomejs.biome",
    "editor.tabSize": 2
  },
  "[tailwindcss]": {
    "editor.defaultFormatter": "biomejs.biome",
    "editor.tabSize": 2,
    "editor.quickSuggestions": {
      "strings": true
    }
  },
  /* JS/TS Settings */
  "[javascript]": {
    "editor.defaultFormatter": "biomejs.biome",
    "editor.quickSuggestions": {
      "strings": true
    },
    "editor.tabSize": 2
  },
  "[javascriptreact]": {
    "editor.defaultFormatter": "biomejs.biome",
    "editor.quickSuggestions": {
      "strings": true
    },
    "editor.tabSize": 2
  },
  "[typescript]": {
    "editor.defaultFormatter": "biomejs.biome",
    "editor.quickSuggestions": {
      "strings": true
    },
    "editor.tabSize": 2
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "biomejs.biome",
    "editor.quickSuggestions": {
      "strings": true
    },
    "editor.tabSize": 2
  },
  "javascript.updateImportsOnFileMove.enabled": "always",
  "javascript.inlayHints.parameterNames.enabled": "literals",
  "javascript.inlayHints.variableTypes.enabled": true,
  "javascript.inlayHints.propertyDeclarationTypes.enabled": true,
  "javascript.inlayHints.parameterTypes.enabled": true,
  "javascript.inlayHints.functionLikeReturnTypes.enabled": true,
  "javascript.inlayHints.enumMemberValues.enabled": true,
  "typescript.updateImportsOnFileMove.enabled": "always",
  "typescript.inlayHints.parameterNames.enabled": "literals",
  "typescript.inlayHints.variableTypes.enabled": true,
  "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
  "typescript.inlayHints.parameterTypes.enabled": true,
  "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
  "typescript.inlayHints.enumMemberValues.enabled": true,
  /* Python Settings */
  "[python]": {
    "editor.defaultFormatter": "charliermarsh.ruff",
  },
  "python.defaultInterpreterPath": "${workspaceFolder}/.venv/bin/python",
  "python.analysis.inlayHints.callArgumentNames": "partial",
  "python.analysis.inlayHints.variableTypes": true,
  "python.analysis.inlayHints.pytestParameters": true,
  "python.analysis.inlayHints.functionReturnTypes": true,
  "ruff.path": [
    "${workspaceFolder}/.venv/bin/ruff"
  ],
  "ruff.lint.args": [
    "--config=${workspaceFolder}/pyproject.toml"
  ],
  "ruff.format.args": [
    "--config=${workspaceFolder}/pyproject.toml"
  ],
  "mypy-type-checker.path": [
    "${workspaceFolder}/.venv/bin/mypy"
  ],
  "mypy-type-checker.args": [
    "--config-file=${workspaceFolder}/pyproject.toml"
  ],
  "jupyter.askForKernelRestart": false,
  "notebook.lineNumbers": "on",
  "notebook.formatOnSave.enabled": true,
  "notebook.codeActionsOnSave": {
    "quickfix.biome": "explicit",
    "source.organizeImports": "explicit"
  },
  /* C/Cpp Settings */
  "[c]": {
    "editor.defaultFormatter": "ms-vscode.cpptools"
  },
  "[cpp]": {
    "editor.defaultFormatter": "llvm-vs-code-extensions.vscode-clangd",
  },
  "C_Cpp.default.cStandard": "gnu17",
  "C_Cpp.default.cppStandard": "gnu++17",
  "C_Cpp.clang_format_style": "file",
  // "C_Cpp.clang_format_style": "{BasedOnStyle: Google, IndentWidth: 4, ColumnLimit: 90, PointerAlignment: Left}",
  "C_Cpp.intelliSenseEngine": "disabled",
  /* Java Settings */
  "[java]": {
    "editor.defaultFormatter": "redhat.java",
  },
  "java.inlayHints.parameterNames.enabled": "literals",
  /* Rust Settings */
  "[rust]": {
    "editor.defaultFormatter": "rust-lang.rust-analyzer",
  },
  "rust-analyzer.check.command": "clippy",
  "rust-analyzer.rustfmt.extraArgs": [
    "--config-path=${workspaceFolder}/rustfmt.toml"
  ],
  /* Go Settings */
  "[go]": {
    "editor.defaultFormatter": "golang.go",
    "editor.insertSpaces": false,
  },
  "go.inlayHints.assignVariableTypes": true,
  "go.inlayHints.compositeLiteralFields": true,
  "go.inlayHints.compositeLiteralTypes": true,
  "go.inlayHints.constantValues": true,
  "go.inlayHints.functionTypeParameters": true,
  "go.inlayHints.parameterNames": true,
  "go.inlayHints.rangeVariableTypes": true,
  "go.toolsManagement.autoUpdate": true,
  /* Ruby Settings */
  "[ruby]": {
    "editor.defaultFormatter": "Shopify.ruby-lsp",
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "files.trimTrailingWhitespace": true,
    "files.insertFinalNewline": true,
    "files.trimFinalNewlines": true,
    "editor.rulers": [
      120
    ],
    "editor.semanticHighlighting.enabled": true,
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
  },
  /* Dart Settings */
  "[dart]": {
    "editor.tabSize": 2,
    "editor.defaultFormatter": "Dart-Code.dart-code",
  },
  "dart.flutterSdkPath": "/Users/yutanishi/flutter",
  /* SQL Settings */
  "[sql]": {
    "editor.defaultFormatter": "adpyke.vscode-sql-formatter"
  },
  "sql-formatter.uppercase": true,
  /* Docker Settings */
  "[dockerfile]": {
    "editor.defaultFormatter": "ms-azuretools.vscode-docker"
  },
  "[dockercompose]": {
    "editor.defaultFormatter": "ms-azuretools.vscode-docker"
  },
  /* Markdown Settings */
  "[markdown]": {
    "editor.defaultFormatter": "yzhang.markdown-all-in-one",
  },
  /* Text Settings */
  "[plaintext]": {
    "editor.quickSuggestions": {
      "other": "off",
      "comments": "off",
      "strings": "off"
    }
  },
  /* LaTeX Settings */
  "[latex]": {
    "editor.defaultFormatter": "James-Yu.latex-workshop",
    "editor.suggest.snippetsPreventQuickSuggestions": false,
    "editor.tabSize": 2,
    "editor.wordWrap": "bounded"
  },
  "latex-workshop.view.pdf.viewer": "tab",
  "latex-workshop.intellisense.package.enabled": true,
  "latex-workshop.latex.outDir": "%DIR%/out",
  "latex-workshop.latexindent.path": "/opt/homebrew/bin/latexindent",
  "latex-workshop.latexindent.args": [
    "%TMPFILE%",
    "-c=%DIR%/",
    "-y=defaultIndent: '%INDENT%'"
  ],
  "latex-workshop.latex.autoClean.run": "onBuilt",
  "latex-workshop.latex.recipes": [
    {
      "name": "latexmk (lualatex)",
      "tools": [
        "lualatexmk"
      ]
    },
  ],
  "latex-workshop.latex.tools": [
    {
      "name": "lualatexmk",
      "command": "latexmk",
      "args": [
        "-synctex=1",
        "-interaction=nonstopmode",
        "-file-line-error",
        "-outdir=%OUTDIR%",
        "%DOC%"
      ],
      "env": {}
    },
  ],
  /* Lua Settings */
  "[lua]": {
    "editor.defaultFormatter": "sumneko.lua",
    "editor.tabSize": 2
  },
  /* XML Settings */
  "[xml]": {
    "editor.defaultFormatter": "redhat.vscode-xml",
    "editor.tabSize": 2,
  },
  "xml.fileAssociations": [
    {
      "systemId": "https://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd",
      "pattern": "**/*.svg"
    }
  ],
  /* SVG Settings */
  "[svg]": {
    "editor.defaultFormatter": "jock.svg",
    "editor.tabSize": 2
  },
  /* Config Settings */
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features",
    "editor.tabSize": 2
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features",
    "editor.tabSize": 2
  },
  "[yaml]": {
    "editor.defaultFormatter": "redhat.vscode-yaml",
    "editor.tabSize": 2
  },
  "[github-actions-workflow]": {
    "editor.defaultFormatter": "redhat.vscode-yaml",
    "editor.tabSize": 2
  },
  "[toml]": {
    "editor.defaultFormatter": "tamasfe.even-better-toml",
    "editor.tabSize": 2
  },
  "evenBetterToml.formatter.columnWidth": 90,
  "evenBetterToml.formatter.reorderKeys": true,
  "evenBetterToml.formatter.reorderArrays": true,
  "[nix]": {
    "editor.defaultFormatter": "kamadorueda.alejandra",
  },
  "alejandra.program": "alejandra",
  /* Shell Script Settings */
  "[shellscript]": {
    "editor.defaultFormatter": "foxundermoon.shell-format"
  },
  /* Indent Rainbow Settings */
  "indentRainbow.indicatorStyle": "light",
  "indentRainbow.lightIndicatorStyleLineWidth": 1,
  "indentRainbow.colors": [
    "rgba(255,255,64,0.3)",
    "rgba(127,255,127,0.3)",
    "rgba(255,127,255,0.3)",
    "rgba(79,236,236,0.3)"
  ],
  "indentRainbow.errorColor": "rgba(0, 0, 0, 0)",
  /* Hex Editor Settings */
  "hexeditor.columnWidth": 16,
  "hexeditor.showDecodedText": true,
  "hexeditor.defaultEndianness": "little",
  "hexeditor.inspectorType": "aside",
  /* Remote SSH Settings */
  "remote.SSH.configFile": "/Users/yutanishi/.ssh/config",
  "remote.SSH.lockfilesInTmp": true,
  "remote.SSH.useLocalServer": false,
  "remote.SSH.useFlock": false,
  "remote.SSH.remotePlatform": {
    "virtus-home": "linux",
    "tellus-home": "linux",
    "vulcanus-home": "linux",
    "tellus": "linux",
    "vulcanus": "linux",
    "virtus": "linux",
    "maia": "macOS",
    "web-server-home": "linux",
    "maia-home": "macOS",
    "murcia-home": "macOS",
    "hercules": "linux",
    "hercules-home": "linux",
    "volupta": "linux"
  },
  /* Git Settings */
  "git.suggestSmartCommit": false,
  "git.confirmSync": false,
  "git.openRepositoryInParentFolders": "never",
  "githubPullRequests.createOnPublishBranch": "never",
  "git-graph.openNewTabEditorGroup": "Beside",
  "gitlens.advanced.messages": {
    "suppressCommitNotFoundWarning": true
  },
  "github.copilot.editor.enableAutoCompletions": true,
  "github.copilot.enable": {
    "quarto": false,
    "*": true
  },
  "github.copilot.chat.localeOverride": "ja",
  /* Live Server Settings */
  "liveServer.settings.donotShowInfoMsg": true,
  "liveServer.settings.donotVerifyTags": true,
  /* Path Intellisense Settings */
  "path-intellisense.absolutePathToWorkspace": false,
  "path-intellisense.showHiddenFiles": true,
  /* LeetCode Settings */
  "leetcode.defaultLanguage": "python3",
  "leetcode.workspaceFolder": "/Users/yutanishi/Development/competitive-programming/leetcode/leetcode-py/src",
  "leetcode.hint.configWebviewMarkdown": false,
  "leetcode.filePath": {
    "default": {
      "folder": "",
      "filename": "${difficulty}_${id}_${snake_case_name}.${ext}"
    }
  },
  "leetcode.hint.commentDescription": false,
  /* Code Runner Settings */
  "code-runner.runInTerminal": true,
  "code-runner.executorMap": {
    "c": "cd $dir && clang -std=gnu17 $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "cpp": "cd $dir && clang++ -std=gnu++17 $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
  },
  /* Background Settings */
  "background.useFront": false,
  /* Extension Settings */
  "redhat.telemetry.enabled": false,
  "remoteHub.uncommittedChangesOnEntry": "none",
  "svg.preview.mode": "svg",
  "hadolint.hadolintPath": "/usr/local/bin/hadolint",
  "prisma.showPrismaDataPlatformNotification": false,
  "remote.autoForwardPortsSource": "hybrid",
  "cmake.showOptionsMovedNotification": false,
  "security.workspace.trust.untrustedFiles": "open",
  "hediet.vscode-drawio.resizeImages": null,
}
